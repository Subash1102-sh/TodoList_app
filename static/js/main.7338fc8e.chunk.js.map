{"version":3,"sources":["ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","newItems","filteredItems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAsCeA,MAjCf,SAAmBC,GACf,IACMC,EADOD,EAAME,MACIC,KAAI,SAAAC,GAEnB,OAAO,qBAAKC,UAAW,OAAhB,SACD,8BACI,uBAAOC,KAAM,OAAOC,GAAKH,EAAKI,IAC9BC,MAAQL,EAAKM,KACbC,SACI,SAACC,GACGZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAML,EAAKI,QAGhD,+BACI,cAAC,IAAD,CAAiBH,UAAW,UAAUU,KAAM,QAC5CC,QACI,kBAAMhB,EAAMiB,WAAWb,EAAKI,cAZNJ,EAAKI,QAkBlD,OACI,8BACI,cAAC,IAAD,CAAUU,SAAW,IACrBC,OAAQ,cADR,SAEIlB,O,eCzBfmB,IAAQC,IAAIC,K,IAiFGC,E,kDA7Eb,WAAYvB,GAAO,IAAD,8BAChB,cAAMA,IACDwB,MAAO,CACVtB,MAAM,GACNuB,YAAY,CACVf,KAAK,GACLF,IAAI,KAGP,EAAKkB,YAAa,EAAKA,YAAYC,KAAjB,gBAClB,EAAKC,QAAS,EAAKA,QAAQD,KAAb,gBACd,EAAKV,WAAY,EAAKA,WAAWU,KAAhB,gBACjB,EAAKd,UAAW,EAAKA,UAAUc,KAAf,gBAZD,E,+CAgBlB,SAAYf,GACViB,KAAKC,SAAS,CACdL,YAAY,CACVf,KAAME,EAAEE,OAAOL,MACfD,IAAIuB,KAAKC,W,qBAIb,SAAQpB,GACLA,EAAEqB,iBACF,IAAMC,EAASL,KAAKL,MAAMC,YAE1B,GADAU,QAAQC,IAAIF,GACO,KAAhBA,EAAQxB,KAAW,CAClB,IAAM2B,EAAQ,sBAAMR,KAAKL,MAAMtB,OAAjB,CAAuBgC,IACrCL,KAAKC,SAAS,CACd5B,MAAMmC,EACNZ,YAAY,CACVf,KAAK,GACLF,IAAI,S,wBAOb,SAAWA,GACL,IAAM8B,EAAeT,KAAKL,MAAMtB,MAAMqC,QAAO,SAAAnC,GAAI,OAC/CA,EAAKI,MAAMA,KACXqB,KAAKC,SAAS,CACZ5B,MAAOoC,M,uBAGjB,SAAU5B,EAAKF,GACZ,IAAMN,EAAO2B,KAAKL,MAAMtB,MACxBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IACZJ,EAAKM,KAAKA,MAGbmB,KAAKC,SAAS,CACX5B,MAAOA,M,oBAGd,WACE,OACC,sBAAKG,UAAW,MAAhB,UACE,iCACC,uBAAME,GAAI,aAAaiC,SAAWX,KAAKD,QAAvC,UACA,uBAAOtB,KAAM,OAAOmC,YAAa,aAAchC,MAAQoB,KAAKL,MAAMC,YAAYf,KAC9EC,SAAWkB,KAAKH,cAChB,wBAAQpB,KAAM,SAAd,sBAGA,cAAC,EAAD,CAAWJ,MAAS2B,KAAKL,MAAMtB,MAC/Be,WAAcY,KAAKZ,WACnBJ,UAAYgB,KAAKhB,mB,GAxEP6B,IAAMC,WCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7338fc8e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './ListItems.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction ListItems(props){\r\n    const items =props.items;\r\n    const listItems =items.map(item =>\r\n        {\r\n            return <div className =\"list\" key ={item.key}>\r\n                  <p>\r\n                      <input type =\"text\" id ={item.key} \r\n                      value ={item.text} \r\n                      onChange ={\r\n                          (e) =>{\r\n                              props.setUpdate(e.target.value,item.key)\r\n                          }\r\n                      } />\r\n                  <span>\r\n                      <FontAwesomeIcon className =\"faicons\" icon ='trash'\r\n                      onClick ={\r\n                          () => props.deleteItem(item.key)\r\n                      }/>\r\n                  </span>\r\n                  </p>\r\n            </div>\r\n        })\r\n   return(\r\n       <div>\r\n           <FlipMove duration ={100}\r\n           easing =\"ease-in-out\">\r\n              {listItems} \r\n           </FlipMove>    \r\n                </div>\r\n   )\r\n       \r\n   \r\n}\r\nexport default ListItems;","import React from  'react';\nimport './App.css';\nimport ListItems from './ListItems';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash);\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state ={\n      items:[],\n      currentItem:{\n        text:'',\n        key:''\n      }\n    }\n     this.handleInput =this.handleInput.bind(this);\n     this.addItem =this.addItem.bind(this);\n     this.deleteItem =this.deleteItem.bind(this);\n     this.setUpdate =this.setUpdate.bind(this);\n\n\n  }\n  handleInput(e){\n    this.setState({\n    currentItem:{\n      text: e.target.value,\n      key:Date.now()\n    }  \n     })\n  }\n  addItem(e){\n     e.preventDefault();\n     const newItem =this.state.currentItem;\n     console.log(newItem);\n     if(newItem.text !==\"\"){\n         const newItems =[...this.state.items,newItem];\n         this.setState({\n         items:newItems,\n         currentItem:{\n           text:'',\n           key:''\n\n\n         }\n       })\n     }\n  }\n  deleteItem(key){\n        const filteredItems =this.state.items.filter(item =>\n          item.key!==key);\n          this.setState({\n            items :filteredItems\n          })\n  }\n  setUpdate(text,key){\n     const items =this.state.items;\n     items.map(item =>{\n       if(item.key===key){\n         item.text=text;\n       }\n     })\n      this.setState({\n         items :items\n      })\n  }\n  render(){\n    return (\n     <div className =\"App\">\n       <header>\n        <form id =\"to-do-form\" onSubmit ={this.addItem}>\n        <input type =\"text\" placeholder =\"Enter Text\"  value ={this.state.currentItem.text}\n        onChange ={this.handleInput}/>\n        <button type =\"submit\">Add</button>\n        </form>\n        </header>\n        <ListItems items = {this.state.items}\n        deleteItem = {this.deleteItem}\n        setUpdate ={this.setUpdate}></ListItems>\n      </div>\n    )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}